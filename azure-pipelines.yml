# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Azure Self-Hosted
  timeoutInMinutes: 1860

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Set directory for installation - Chocolatey does not lock
      # down the directory if not the default
      $InstallDir='C:\ProgramData\chocoportable'
      $env:ChocolateyInstall="$InstallDir"
      
      # If your PowerShell Execution policy is restrictive, you may
      # not be able to get around that. Try setting your session to
      # Bypass.
      Set-ExecutionPolicy Bypass -Scope Process -Force;
      
      # All install options - offline, proxy, etc at
      # https://chocolatey.org/install
      iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
  
- script: |
    choco install packer
  displayName: 'Install packer'

- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'lev'
    ScriptType: 'InlineScript'
    Inline: |
      Import-Module .\helpers\GenerateResourcesAndImage.ps1
      $PSNativeCommandArgumentPassing = 'Legacy'
      GenerateResourcesAndImage -subscriptionid "70781410-ee03-4e2b-a97e-b2a55b88bf95" -resourcegroupname "lev-rg-adopipelineimage" -azurelocation "East US" -imagetype "UbuntuMinimal"
    azurePowerShellVersion: 'LatestVersion'